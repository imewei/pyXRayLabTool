#!/bin/bash
#
# Post-commit hook to automatically commit pre-commit formatting changes
# This ensures that files formatted by pre-commit hooks are committed automatically
#

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}üîç Post-commit: Checking for pre-commit formatting changes...${NC}"

# Check if there are any unstaged changes
if ! git diff --quiet; then
    echo -e "${YELLOW}üìù Found unstaged changes from pre-commit hooks${NC}"
    
    # Check if the changes are only formatting-related (common pre-commit changes)
    # Look for typical pre-commit file patterns
    FORMATTING_CHANGES=$(git diff --name-only | grep -E '\.(py|yaml|yml|json|md|rst|toml)$' || true)
    
    if [ -n "$FORMATTING_CHANGES" ]; then
        echo -e "${BLUE}Files with formatting changes:${NC}"
        echo "$FORMATTING_CHANGES" | sed 's/^/  - /'
        
        # Show a summary of changes
        echo -e "\n${BLUE}Change summary:${NC}"
        git diff --stat
        
        # Stage the formatting changes
        echo -e "\n${GREEN}‚ûï Staging pre-commit formatting changes...${NC}"
        git add -A
        
        # Check if there are staged changes to commit
        if ! git diff --cached --quiet; then
            echo -e "${GREEN}üíæ Committing pre-commit formatting improvements...${NC}"
            
            # Create a follow-up commit for the formatting changes
            git commit -m "üé® style: apply pre-commit formatting improvements

Automatic commit of formatting changes applied by pre-commit hooks:
- Black code formatting
- isort import organization  
- Whitespace and end-of-file fixes
- Other code quality improvements

These changes maintain code style consistency across the codebase.

ü§ñ Auto-generated by post-commit hook" --no-verify
            
            echo -e "${GREEN}‚úÖ Pre-commit formatting changes committed successfully!${NC}"
            
            # Optional: Push the formatting commit automatically
            # Uncomment the following lines to enable auto-push
            # echo -e "${BLUE}üöÄ Pushing formatting commit...${NC}"
            # git push origin $(git branch --show-current)
            # echo -e "${GREEN}‚úÖ Formatting commit pushed to remote${NC}"
        else
            echo -e "${YELLOW}‚ö†Ô∏è  No staged changes to commit${NC}"
        fi
    else
        echo -e "${YELLOW}‚ö†Ô∏è  Changes detected but not formatting-related, skipping auto-commit${NC}"
        echo -e "${BLUE}Manual review recommended for:${NC}"
        git diff --name-only | sed 's/^/  - /'
    fi
else
    echo -e "${GREEN}‚úÖ No formatting changes from pre-commit hooks${NC}"
fi

echo -e "${BLUE}üèÅ Post-commit hook completed${NC}"